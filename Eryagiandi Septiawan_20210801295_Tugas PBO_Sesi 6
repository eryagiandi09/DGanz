/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package sesi_6;
import java.applet.*; 
import java.awt.*; 
import java.util.*; 
import java.text.*;
/**
 *
 * @author HP EliteBook 725 G2
 */
public class jamanalog extends Applet implements Runnable{
     private volatile Thread timer; 
     private Date WaktuSekarang; 
     private SimpleDateFormat FormatWaktu; 
     private String WaktuTerakhir; 
     private boolean mulai; 
     private int xhSblm, yhSblm, xmSblm, ymSblm, xsSblm, ysSblm;
 
 public void init() { 
    FormatWaktu = new SimpleDateFormat ("HH:mm:ss EEEE, dd-MMyyyy",Locale.getDefault()); 
    WaktuSekarang = new Date(); 
    WaktuTerakhir = FormatWaktu.format(WaktuSekarang); 
    mulai=false; 
    xhSblm=0; 
    yhSblm=0; 
    xmSblm=0; 
    ymSblm=0; 
    xsSblm=0; 
    ysSblm=0; 
 }
 
 public void paint(Graphics g) { 
    int jam = 0, menit = 0, detik = 0; 
    int xh, yh, xm, ym, xs, ys;
    int xPusat = 100, yPusat = 80, xTeksWaktu=5, yTeksWaktu=175; 
    String today; 
    int i; 
 
 WaktuSekarang = new Date();
 FormatWaktu.applyPattern("h");
 try { 
 jam = Integer.parseInt(FormatWaktu.format(WaktuSekarang)); 
 } catch (NumberFormatException n) { 
 jam = 0; 
 } 
 
 FormatWaktu.applyPattern("m"); 
 try { 
 menit = Integer.parseInt(FormatWaktu.format(WaktuSekarang)); 
 } catch (NumberFormatException n) { 
 menit = 0; 
 } 
 
 FormatWaktu.applyPattern("s"); 
 try { 
 detik = Integer.parseInt(FormatWaktu.format(WaktuSekarang)); 
 } catch (NumberFormatException n) { 
 detik = 0; 
 }
 if (mulai) { 
 g.setColor(getBackground()); 
 g.drawLine(xPusat, yPusat, xsSblm, ysSblm); 
 g.drawLine(xPusat, yPusat-1, xmSblm, ymSblm); 
 g.drawLine(xPusat-1, yPusat, xmSblm, ymSblm); 
 g.drawLine(xPusat, yPusat-1, xhSblm, yhSblm); 
 g.drawLine(xPusat-1, yPusat, xhSblm, yhSblm); 
 g.drawString(WaktuTerakhir, xTeksWaktu, yTeksWaktu); 
 }
 g.setColor(Color.blue); 
 g.drawArc(xPusat-50, yPusat-50, 100, 100, 0, 360);
 for (i = 1;i <= 12;i++){ 
 xs = (int) (60 * Math.sin((i * 30) * Math.PI/ 180)); 
 ys = (int) (60 * Math.cos((i * 30) * Math.PI/ 180));
 g.drawString(Integer.toString(i), (xPusat+xs)-5, (yPusat-ys)+5); 
 } 
 
 FormatWaktu.applyPattern("HH:mm:ss EEEE, dd-MM-yyyy"); 
 today = FormatWaktu.format(WaktuSekarang); 
 g.setColor(Color.red); 
 g.drawString(today, xTeksWaktu, yTeksWaktu);
 xs = (int) (Math.cos(detik * Math.PI / 30 - Math.PI / 2) * 45 + 
xPusat);
 ys = (int) (Math.sin(detik * Math.PI / 30 - Math.PI / 2) * 45 + 
yPusat); 
 xm = (int) (Math.cos(menit * Math.PI / 30 - Math.PI / 2) * 40 + 
xPusat); 
 ym = (int) (Math.sin(menit * Math.PI / 30 - Math.PI / 2) * 40 + 
yPusat); 
 xh = (int) (Math.cos((jam*30 + menit / 2) * Math.PI / 180 - Math.PI 
/ 2) * 30+ xPusat); 
 yh = (int) (Math.sin((jam*30 + menit / 2) * Math.PI / 180 - Math.PI 
/ 2) * 30+ yPusat);
 g.setColor(Color.black);
 g.drawString(today, xTeksWaktu, yTeksWaktu);
 g.drawLine(xPusat, yPusat, xs, ys);
 g.setColor(Color.blue);
 g.drawLine(xPusat, yPusat-1, xm, ym); 
 g.drawLine(xPusat-1, yPusat, xm, ym);
 xhSblm=xh; 
 yhSblm=yh; 
 xmSblm=xm; 
 ymSblm=ym; 
 xsSblm=xs; 
 ysSblm=ys;
 WaktuTerakhir = today; 
 WaktuSekarang = null; 
 mulai=true; 
 } 
 
 public void start() { 
    timer = new Thread((Runnable) this); 
    timer.start(); 
 } 
 public void stop() { 
    timer = null; 
 } 
 public void run() { 
    Thread me = Thread.currentThread(); 
    while (timer == me) { 
    try { 
    Thread.currentThread().sleep(100); 
    } catch (InterruptedException e) { 
    } 
    repaint(); 
    } 
    }
 public void update(Graphics g) { 
    paint(g);

 }
 
}
